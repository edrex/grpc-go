// Code generated by protoc-gen-go.
// source: foo.proto
// DO NOT EDIT!

/*
Package routeguide is a generated protocol buffer package.

It is generated from these files:
	foo.proto

It has these top-level messages:
	Point
*/
package routeguide

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Points are represented as latitude-longitude pairs in the E7 representation
// (degrees multiplied by 10**7 and rounded to the nearest integer).
// Latitudes should be in the range +/- 90 degrees and longitude should be in
// the range +/- 180 degrees (inclusive).
type Point struct {
	Latitude  int32 `protobuf:"varint,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude int32 `protobuf:"varint,2,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *Point) Reset()                    { *m = Point{} }
func (m *Point) String() string            { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()               {}
func (*Point) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Point) GetLatitude() int32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Point) GetLongitude() int32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func init() {
	proto.RegisterType((*Point)(nil), "routeguide.Point")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Foo service

type FooClient interface {
	// A Bidirectional streaming RPC.
	PointChat(ctx context.Context, opts ...grpc.CallOption) (Foo_PointChatClient, error)
}

type fooClient struct {
	cc *grpc.ClientConn
}

func NewFooClient(cc *grpc.ClientConn) FooClient {
	return &fooClient{cc}
}

func (c *fooClient) PointChat(ctx context.Context, opts ...grpc.CallOption) (Foo_PointChatClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Foo_serviceDesc.Streams[0], c.cc, "/routeguide.Foo/PointChat", opts...)
	if err != nil {
		return nil, err
	}
	x := &fooPointChatClient{stream}
	return x, nil
}

type Foo_PointChatClient interface {
	Send(*Point) error
	Recv() (*Point, error)
	grpc.ClientStream
}

type fooPointChatClient struct {
	grpc.ClientStream
}

func (x *fooPointChatClient) Send(m *Point) error {
	return x.ClientStream.SendMsg(m)
}

func (x *fooPointChatClient) Recv() (*Point, error) {
	m := new(Point)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Foo service

type FooServer interface {
	// A Bidirectional streaming RPC.
	PointChat(Foo_PointChatServer) error
}

func RegisterFooServer(s *grpc.Server, srv FooServer) {
	s.RegisterService(&_Foo_serviceDesc, srv)
}

func _Foo_PointChat_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FooServer).PointChat(&fooPointChatServer{stream})
}

type Foo_PointChatServer interface {
	Send(*Point) error
	Recv() (*Point, error)
	grpc.ServerStream
}

type fooPointChatServer struct {
	grpc.ServerStream
}

func (x *fooPointChatServer) Send(m *Point) error {
	return x.ServerStream.SendMsg(m)
}

func (x *fooPointChatServer) Recv() (*Point, error) {
	m := new(Point)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Foo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "routeguide.Foo",
	HandlerType: (*FooServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PointChat",
			Handler:       _Foo_PointChat_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "foo.proto",
}

func init() { proto.RegisterFile("foo.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 166 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0xcb, 0xcf, 0xd7,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x2a, 0xca, 0x2f, 0x2d, 0x49, 0x4d, 0x2f, 0xcd, 0x4c,
	0x49, 0x55, 0x72, 0xe4, 0x62, 0x0d, 0xc8, 0xcf, 0xcc, 0x2b, 0x11, 0x92, 0xe2, 0xe2, 0xc8, 0x49,
	0x2c, 0xc9, 0x2c, 0x29, 0x4d, 0x49, 0x95, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d, 0x82, 0xf3, 0x85,
	0x64, 0xb8, 0x38, 0x73, 0xf2, 0xf3, 0xd2, 0x21, 0x92, 0x4c, 0x60, 0x49, 0x84, 0x80, 0x91, 0x1d,
	0x17, 0xb3, 0x5b, 0x7e, 0xbe, 0x90, 0x39, 0x17, 0x27, 0xd8, 0x24, 0xe7, 0x8c, 0xc4, 0x12, 0x21,
	0x41, 0x3d, 0x84, 0x1d, 0x7a, 0x60, 0x61, 0x29, 0x4c, 0x21, 0x25, 0x06, 0x0d, 0x46, 0x03, 0x46,
	0x27, 0x03, 0x2e, 0xe9, 0xcc, 0x7c, 0xbd, 0xf4, 0xa2, 0x82, 0x64, 0xbd, 0xd4, 0x8a, 0xc4, 0xdc,
	0x82, 0x9c, 0xd4, 0x62, 0x24, 0xa5, 0x4e, 0xfc, 0x41, 0x20, 0xb6, 0x3b, 0x88, 0x1d, 0x00, 0x72,
	0x7e, 0x00, 0x63, 0x12, 0x1b, 0xd8, 0x1f, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x48, 0x8f,
	0x23, 0x57, 0xd4, 0x00, 0x00, 0x00,
}
